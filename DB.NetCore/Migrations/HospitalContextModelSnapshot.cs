// <auto-generated />
using System;
using DB.NetCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DB.NetCore.Migrations
{
    [DbContext(typeof(HospitalContext))]
    partial class HospitalContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DB.NetCore.Model.Doctor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("PatronymicName");

                    b.Property<string>("Position");

                    b.HasKey("Id");

                    b.ToTable("Doctors");
                });

            modelBuilder.Entity("DB.NetCore.Model.Document", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FilePath");

                    b.Property<int?>("PacientId");

                    b.HasKey("Id");

                    b.HasIndex("PacientId");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("DB.NetCore.Model.Pacient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BuildingNumber");

                    b.Property<string>("FirstName");

                    b.Property<string>("FlatNumber");

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<string>("PacientPhoneNumber");

                    b.Property<int>("PacientType");

                    b.Property<string>("ParentFirstName");

                    b.Property<string>("ParentLastName");

                    b.Property<string>("ParentPatronymicName");

                    b.Property<string>("PatronymicName");

                    b.Property<string>("Sity")
                        .IsRequired();

                    b.Property<string>("Street")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Pacients");
                });

            modelBuilder.Entity("DB.NetCore.Model.VisitLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DoctorId");

                    b.Property<int?>("PacientId");

                    b.Property<DateTime>("VisitDateTime");

                    b.HasKey("Id");

                    b.HasIndex("DoctorId");

                    b.HasIndex("PacientId");

                    b.ToTable("VisitLogs");
                });

            modelBuilder.Entity("DB.NetCore.Model.Document", b =>
                {
                    b.HasOne("DB.NetCore.Model.Pacient", "Pacient")
                        .WithMany()
                        .HasForeignKey("PacientId");
                });

            modelBuilder.Entity("DB.NetCore.Model.VisitLog", b =>
                {
                    b.HasOne("DB.NetCore.Model.Doctor", "Doctor")
                        .WithMany()
                        .HasForeignKey("DoctorId");

                    b.HasOne("DB.NetCore.Model.Pacient", "Pacient")
                        .WithMany("VisitLogs")
                        .HasForeignKey("PacientId");
                });
#pragma warning restore 612, 618
        }
    }
}
